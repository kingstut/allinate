"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/surveys";
exports.ids = ["pages/api/surveys"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "(api)/./pages/api/surveys/index.js":
/*!************************************!*\
  !*** ./pages/api/surveys/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _server_db_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../server/db/client */ \"(api)/./server/db/client.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);\nfunction handler(req, res) {\n    switch(req.method){\n        case \"POST\":\n            return postSurvey();\n        case \"PUT\":\n            return updateSurvey();\n        case \"DELETE\":\n            return deleteSurvey();\n        default:\n            return res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n    async function postSurvey() {\n        try {\n            const { data  } = req.body;\n            const users = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.user.findMany();\n            await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey.create({\n                data: {\n                    question: data.question,\n                    show_to_users: users.map((user)=>user.user_id),\n                    budget: parseFloat(data.budget),\n                    cpr: parseFloat(data.cpr)\n                }\n            });\n            return res.status(200).json({});\n        } catch (error) {\n            return res.status(400).json({\n                message: error\n            });\n        }\n    }\n    async function updateSurvey() {\n        try {\n            const { email: email , survey_id: survey_id , cpr: cpr  } = req.body;\n            //remove user who has submitted \n            const surv = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey.findUnique({\n                where: {\n                    survey_id: survey_id\n                }\n            });\n            const index = surv.show_to_users.indexOf(email);\n            delete surv.show_to_users[index];\n            await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey.update({\n                where: {\n                    survey_id: survey_id\n                },\n                data: {\n                    show_to_users: surv.show_to_users\n                }\n            });\n            //reduce budget by cpr \n            await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey.update({\n                where: {\n                    survey_id: survey_id\n                },\n                data: {\n                    budget: {\n                        increment: -parseFloat(cpr)\n                    }\n                }\n            });\n            // delete survey of no budget is left \n            const this_survey = await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey.findUnique({\n                where: {\n                    survey_id: survey_id\n                }\n            });\n            const budget = this_survey.budget;\n            if (budget < cpr) {\n                await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey[\"delete\"]({\n                    where: {\n                        survey_id: survey_id\n                    }\n                });\n            }\n            return res.status(200).json({});\n        } catch (error) {\n            return res.status(400).json({\n                message: error\n            });\n        }\n    }\n    async function deleteSurvey() {\n        const { survey_id  } = req.body;\n        await _server_db_client__WEBPACK_IMPORTED_MODULE_0__.prisma.survey[\"delete\"]({\n            where: {\n                survey_id: survey_id\n            }\n        });\n        return res.status(200).json({});\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvc3VydmV5cy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRDtBQUNsRCxpRUFBZUMsT0FBT0EsRUFBQztBQUV2QixTQUFTQSxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUN2QixPQUFRRCxJQUFJRSxNQUFNO1FBQ2QsS0FBSztZQUNELE9BQU9DO1FBQ1gsS0FBSztZQUNELE9BQU9DO1FBQ1gsS0FBSztZQUNELE9BQU9DO1FBQ1g7WUFDSSxPQUFPSixJQUFJSyxNQUFNLENBQUMsS0FBS0MsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFUCxJQUFJRSxNQUFNLENBQUMsWUFBWSxDQUFDO0lBQ3JFO0lBRUEsZUFBZUMsYUFBYTtRQUN4QixJQUFJO1lBQ0EsTUFBTSxFQUFFSyxLQUFJLEVBQUUsR0FBR1IsSUFBSVMsSUFBSTtZQUV6QixNQUFNQyxRQUFRLE1BQU1aLG1FQUFvQjtZQUN4QyxNQUFNQSxtRUFBb0IsQ0FBQztnQkFDdkJVLE1BQU07b0JBQ0ZPLFVBQVdQLEtBQUtPLFFBQVE7b0JBQ3hCQyxlQUFnQk4sTUFBTU8sR0FBRyxDQUFDLENBQUNOLE9BQVNBLEtBQUtPLE9BQU87b0JBQ2hEQyxRQUFTQyxXQUFXWixLQUFLVyxNQUFNO29CQUMvQkUsS0FBTUQsV0FBV1osS0FBS2EsR0FBRztnQkFDN0I7WUFDRjtZQUNGLE9BQU9wQixJQUFJSyxNQUFNLENBQUMsS0FBS2dCLElBQUksQ0FBQyxDQUFDO1FBQ2pDLEVBQUUsT0FBT0MsT0FBTztZQUNaLE9BQU90QixJQUFJSyxNQUFNLENBQUMsS0FBS2dCLElBQUksQ0FBQztnQkFBRUUsU0FBU0Q7WUFBTTtRQUNqRDtJQUNKO0lBRUEsZUFBZW5CLGVBQWU7UUFDMUIsSUFBSTtZQUVBLE1BQU0sRUFBRXFCLE9BQU1BLE1BQUssRUFBRUMsV0FBVUEsVUFBUyxFQUFFTCxLQUFJQSxJQUFHLEVBQUUsR0FBR3JCLElBQUlTLElBQUk7WUFDOUQsZ0NBQWdDO1lBQ2hDLE1BQU1rQixPQUFPLE1BQU03Qix1RUFBd0IsQ0FBQztnQkFDeEMrQixPQUFPO29CQUNMSCxXQUFXQTtnQkFDYjtZQUNGO1lBRUYsTUFBTUksUUFBUUgsS0FBS1gsYUFBYSxDQUFDZSxPQUFPLENBQUNOO1lBQ3pDLE9BQU9FLEtBQUtYLGFBQWEsQ0FBQ2MsTUFBTTtZQUVoQyxNQUFNaEMsbUVBQW9CLENBQUM7Z0JBQ3ZCK0IsT0FBTztvQkFDTEgsV0FBV0E7Z0JBQ2I7Z0JBQ0FsQixNQUFNO29CQUNGUSxlQUFlVyxLQUFLWCxhQUFhO2dCQUNyQztZQUNGO1lBRUYsdUJBQXVCO1lBQ3ZCLE1BQU1sQixtRUFBb0IsQ0FBQztnQkFDdkIrQixPQUFPO29CQUNISCxXQUFXQTtnQkFDZjtnQkFDQWxCLE1BQU07b0JBQ0ZXLFFBQVE7d0JBQ0pjLFdBQVcsQ0FBQ2IsV0FBV0M7b0JBQzNCO2dCQUNKO1lBQ0Y7WUFFRixzQ0FBc0M7WUFDdEMsTUFBTWEsY0FBYyxNQUFNcEMsdUVBQXdCLENBQUM7Z0JBQy9DK0IsT0FBTztvQkFDSEgsV0FBV0E7Z0JBQ2Y7WUFDRjtZQUNGLE1BQU1QLFNBQVNlLFlBQVlmLE1BQU07WUFDakMsSUFBSUEsU0FBT0UsS0FBSztnQkFDWixNQUFNdkIsc0VBQW9CLENBQUM7b0JBQ3ZCK0IsT0FBTzt3QkFDTEgsV0FBV0E7b0JBQ2I7Z0JBQ0Y7WUFDTixDQUFDO1lBRUQsT0FBT3pCLElBQUlLLE1BQU0sQ0FBQyxLQUFLZ0IsSUFBSSxDQUFDLENBQUM7UUFDakMsRUFBRSxPQUFPQyxPQUFPO1lBQ1osT0FBT3RCLElBQUlLLE1BQU0sQ0FBQyxLQUFLZ0IsSUFBSSxDQUFDO2dCQUFFRSxTQUFTRDtZQUFNO1FBQ2pEO0lBQ0o7SUFFQSxlQUFlbEIsZUFBZTtRQUMxQixNQUFNLEVBQUVxQixVQUFTLEVBQUUsR0FBRzFCLElBQUlTLElBQUk7UUFDOUIsTUFBTVgsc0VBQW9CLENBQUM7WUFDdkIrQixPQUFPO2dCQUNMSCxXQUFXQTtZQUNiO1FBQ0Y7UUFFRixPQUFPekIsSUFBSUssTUFBTSxDQUFDLEtBQUtnQixJQUFJLENBQUMsQ0FBQztJQUNqQztBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYnlvcy12Ly4vcGFnZXMvYXBpL3N1cnZleXMvaW5kZXguanM/MzdmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcmlzbWEgfSBmcm9tICcuLi8uLi8uLi9zZXJ2ZXIvZGIvY2xpZW50J1xuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcblxuZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICAgIHN3aXRjaCAocmVxLm1ldGhvZCkge1xuICAgICAgICBjYXNlICdQT1NUJzpcbiAgICAgICAgICAgIHJldHVybiBwb3N0U3VydmV5KCk7XG4gICAgICAgIGNhc2UgJ1BVVCc6XG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlU3VydmV5KCk7XG4gICAgICAgIGNhc2UgJ0RFTEVURSc6XG4gICAgICAgICAgICByZXR1cm4gZGVsZXRlU3VydmV5KCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmVuZChgTWV0aG9kICR7cmVxLm1ldGhvZH0gTm90IEFsbG93ZWRgKVxuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIHBvc3RTdXJ2ZXkoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB7IGRhdGEgfSA9IHJlcS5ib2R5XG5cbiAgICAgICAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgcHJpc21hLnVzZXIuZmluZE1hbnkoKVxuICAgICAgICAgICAgYXdhaXQgcHJpc21hLnN1cnZleS5jcmVhdGUoe1xuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgcXVlc3Rpb24gOiBkYXRhLnF1ZXN0aW9uLFxuICAgICAgICAgICAgICAgICAgICBzaG93X3RvX3VzZXJzIDogdXNlcnMubWFwKCh1c2VyKSA9PiB1c2VyLnVzZXJfaWQpLFxuICAgICAgICAgICAgICAgICAgICBidWRnZXQgOiBwYXJzZUZsb2F0KGRhdGEuYnVkZ2V0KSxcbiAgICAgICAgICAgICAgICAgICAgY3ByIDogcGFyc2VGbG9hdChkYXRhLmNwciksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7fSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiBlcnJvciB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVN1cnZleSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgY29uc3QgeyBlbWFpbDplbWFpbCwgc3VydmV5X2lkOnN1cnZleV9pZCwgY3ByOmNwciB9ID0gcmVxLmJvZHlcbiAgICAgICAgICAgIC8vcmVtb3ZlIHVzZXIgd2hvIGhhcyBzdWJtaXR0ZWQgXG4gICAgICAgICAgICBjb25zdCBzdXJ2ID0gYXdhaXQgcHJpc21hLnN1cnZleS5maW5kVW5pcXVlKHtcbiAgICAgICAgICAgICAgICB3aGVyZToge1xuICAgICAgICAgICAgICAgICAgc3VydmV5X2lkOiBzdXJ2ZXlfaWQsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHN1cnYuc2hvd190b191c2Vycy5pbmRleE9mKGVtYWlsKTtcbiAgICAgICAgICAgIGRlbGV0ZSBzdXJ2LnNob3dfdG9fdXNlcnNbaW5kZXhdXG4gICAgICAgIFxuICAgICAgICAgICAgYXdhaXQgcHJpc21hLnN1cnZleS51cGRhdGUoe1xuICAgICAgICAgICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgICAgICAgICBzdXJ2ZXlfaWQ6IHN1cnZleV9pZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgc2hvd190b191c2Vyczogc3Vydi5zaG93X3RvX3VzZXJzLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vcmVkdWNlIGJ1ZGdldCBieSBjcHIgXG4gICAgICAgICAgICBhd2FpdCBwcmlzbWEuc3VydmV5LnVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgc3VydmV5X2lkOiBzdXJ2ZXlfaWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGJ1ZGdldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5jcmVtZW50OiAtcGFyc2VGbG9hdChjcHIpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIC8vIGRlbGV0ZSBzdXJ2ZXkgb2Ygbm8gYnVkZ2V0IGlzIGxlZnQgXG4gICAgICAgICAgICBjb25zdCB0aGlzX3N1cnZleSA9IGF3YWl0IHByaXNtYS5zdXJ2ZXkuZmluZFVuaXF1ZSh7XG4gICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgc3VydmV5X2lkOiBzdXJ2ZXlfaWQsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgY29uc3QgYnVkZ2V0ID0gdGhpc19zdXJ2ZXkuYnVkZ2V0XG4gICAgICAgICAgICBpZiAoYnVkZ2V0PGNwcikge1xuICAgICAgICAgICAgICAgIGF3YWl0IHByaXNtYS5zdXJ2ZXkuZGVsZXRlKHtcbiAgICAgICAgICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgICAgICAgICBzdXJ2ZXlfaWQ6IHN1cnZleV9pZCxcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHt9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6IGVycm9yIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gZGVsZXRlU3VydmV5KCkge1xuICAgICAgICBjb25zdCB7IHN1cnZleV9pZCB9ID0gcmVxLmJvZHlcbiAgICAgICAgYXdhaXQgcHJpc21hLnN1cnZleS5kZWxldGUoe1xuICAgICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgICAgc3VydmV5X2lkOiBzdXJ2ZXlfaWQsXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe30pO1xuICAgIH1cbiAgICBcbn0iXSwibmFtZXMiOlsicHJpc21hIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInBvc3RTdXJ2ZXkiLCJ1cGRhdGVTdXJ2ZXkiLCJkZWxldGVTdXJ2ZXkiLCJzdGF0dXMiLCJlbmQiLCJkYXRhIiwiYm9keSIsInVzZXJzIiwidXNlciIsImZpbmRNYW55Iiwic3VydmV5IiwiY3JlYXRlIiwicXVlc3Rpb24iLCJzaG93X3RvX3VzZXJzIiwibWFwIiwidXNlcl9pZCIsImJ1ZGdldCIsInBhcnNlRmxvYXQiLCJjcHIiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlIiwiZW1haWwiLCJzdXJ2ZXlfaWQiLCJzdXJ2IiwiZmluZFVuaXF1ZSIsIndoZXJlIiwiaW5kZXgiLCJpbmRleE9mIiwidXBkYXRlIiwiaW5jcmVtZW50IiwidGhpc19zdXJ2ZXkiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/surveys/index.js\n");

/***/ }),

/***/ "(api)/./server/db/client.js":
/*!*****************************!*\
  !*** ./server/db/client.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prisma\": () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = global.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) global.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zZXJ2ZXIvZGIvY2xpZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUV0QyxNQUFNQyxTQUNYQyxPQUFPRCxNQUFNLElBQ2IsSUFBSUQsd0RBQVlBLEdBQUU7QUFFcEIsSUFBSUcsSUFBeUIsRUFBY0QsT0FBT0QsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2J5b3Mtdi8uL3NlcnZlci9kYi9jbGllbnQuanM/NzNiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcblxuZXhwb3J0IGNvbnN0IHByaXNtYSA9XG4gIGdsb2JhbC5wcmlzbWEgfHxcbiAgbmV3IFByaXNtYUNsaWVudCgpXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWwucHJpc21hID0gcHJpc21hIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImdsb2JhbCIsInByb2Nlc3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./server/db/client.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/surveys/index.js"));
module.exports = __webpack_exports__;

})();